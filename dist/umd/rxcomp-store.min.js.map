{"version":3,"sources":["src/rxcomp-store.ts","../../src/storage/storage.service.ts","../../src/storage/cookie-storage.service.ts","../../src/storage/cookie-storage.component.ts","../../src/storage/local-storage.service.ts","../../src/storage/local-storage.component.ts","../../src/storage/session-storage.service.ts","../../src/storage/session-storage.component.ts","../../src/store.module.ts","../../src/store/store.ts"],"names":["g","f","exports","module","require","define","amd","globalThis","self","rxcomp","store","rxjs","operators","immer","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","StorageService","encode","decoded","Serializer","encodeJson","encodeURIComponent","encodeBase64","decode","encoded","decodeBase64","decodeURIComponent","decodeJson","isSupported","type","storage","flag","window","x","setItem","removeItem","error","DOMException","code","name","Boolean","CookieStorageService","_StorageService","apply","arguments","clear","_this","toRawArray","forEach","setter","delete","exist","document","cookie","indexOf","get","getRaw","set","value","days","find","setRaw","toArray","_this2","map","split","items","trim","filter","expires","date","Date","setTime","getTime","toUTCString","items$","next","ReplaySubject","CookieStorageComponent","_Component","active","_proto","onInit","pipe","takeUntil","unsubscribe$","subscribe","pushChanges","onToggle","onClear","onRemove","item","Component","selector","template","LocalStorageService","localStorage","undefined","getItem","keys","supported","LocalStorageComponent","SessionStorageService","sessionStorage","SessionStorageComponent","console","log","StoreType","factories","pipes","StoreModule","_Module","Module","declarations","concat","Store","state","Memory","cancel$","Subject","busy","state_","BehaviorSubject","callback","produce","getValue","draft","makeNext","nextError","retry","of","makeNextError","select","makeSelect","state$","asObservable","Constructor","protoProps","staticProps","busy$","cached$","Local","Session","Cookie","select$","distinctUntilChanged","reducer","_this3","source","defer","data","retryState","times","delay","_this4","retryWhen","errors","delayWhen","timer","switchMap","throwError","catchState","errorReducer","_this5","tap","catchError","cancel","useStore","bind"],"mappings":"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","file":"dist/umd/rxcomp-store.min.js","sourcesContent":[null,"import { decodeBase64, decodeJson, encodeBase64, encodeJson, Serializer } from 'rxcomp';\n\nexport interface IStorageItem {\n\tname: string;\n\tvalue: any;\n}\n\nexport default class StorageService {\n\n\tstatic supported: boolean = false;\n\n\tstatic encode(decoded: any): string | null {\n\t\tlet encoded: string | null = Serializer.encode(decoded, [encodeJson, encodeURIComponent, encodeBase64]) || null;\n\t\treturn encoded;\n\t}\n\n\tstatic decode(encoded: string | null): any {\n\t\tlet decoded: any = Serializer.decode(encoded, [decodeBase64, decodeURIComponent, decodeJson]);\n\t\treturn decoded;\n\t}\n\n\tstatic isSupported(type: 'localStorage' | 'sessionStorage'): boolean {\n\t\tlet flag: boolean = false;\n\t\tlet storage;\n\t\ttry {\n\t\t\tstorage = window[type];\n\t\t\tconst x = '__storage_test__';\n\t\t\tstorage.setItem(x, x);\n\t\t\tstorage.removeItem(x);\n\t\t\tflag = true;\n\t\t} catch (error) {\n\t\t\tflag = error instanceof DOMException && (\n\t\t\t\t// everything except Firefox\n\t\t\t\terror.code === 22 ||\n\t\t\t\t// Firefox\n\t\t\t\terror.code === 1014 ||\n\t\t\t\t// test name field too, because code might not be present\n\t\t\t\t// everything except Firefox\n\t\t\t\terror.name === 'QuotaExceededError' ||\n\t\t\t\t// Firefox\n\t\t\t\terror.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n\t\t\t\t// acknowledge QuotaExceededError only if there's something already stored\n\t\t\t\tBoolean(storage && storage.length !== 0);\n\t\t}\n\t\treturn flag;\n\t}\n}\n","import { ReplaySubject } from \"rxjs\";\nimport StorageService, { IStorageItem } from \"./storage.service\";\n\nexport default class CookieStorageService extends StorageService {\n\n\tstatic items$: ReplaySubject<IStorageItem[]> = new ReplaySubject(1);\n\n\tstatic clear(): void {\n\t\tthis.toRawArray().forEach(x => {\n\t\t\tthis.setter(x.name, '', -1);\n\t\t\t// document.cookie = `${x.name}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`;\n\t\t});\n\t}\n\n\tstatic delete(name: string): void {\n\t\tthis.setter(name, '', -1);\n\t}\n\n\tstatic exist(name: string): boolean {\n\t\treturn document.cookie.indexOf(';' + name + '=') !== -1 || document.cookie.indexOf(name + '=') === 0;\n\t}\n\n\tstatic get(name: string): any {\n\t\treturn this.decode(this.getRaw(name));\n\t}\n\n\tstatic set(name: string, value: any, days?: number): void {\n\t\tthis.setter(name, this.encode(value), days);\n\t}\n\n\tstatic getRaw(name: string): string | null {\n\t\tlet value = null;\n\t\tconst cookies = this.toRawArray();\n\t\tconst cookie = cookies.find(x => x.name === name);\n\t\tif (cookie) {\n\t\t\tvalue = cookie.value;\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic setRaw(name: string, value: string, days?: number): void {\n\t\tthis.setter(name, value, days);\n\t}\n\n\tstatic toArray(): IStorageItem[] {\n\t\treturn this.toRawArray().map(x => {\n\t\t\tx.value = this.decode(x.value);\n\t\t\treturn x;\n\t\t});\n\t}\n\n\tstatic toRawArray(): IStorageItem[] {\n\t\treturn document.cookie.split(';').map(x => {\n\t\t\tconst items = x.split('=');\n\t\t\treturn { name: items[0].trim(), value: items[1] ? items[1].trim() : null }\n\t\t}).filter(x => x.name !== '');\n\t}\n\n\tstatic setter(name: string, value: any, days?: number): void {\n\t\tlet expires: string;\n\t\tif (days) {\n\t\t\tconst date = new Date();\n\t\t\tdate.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n\t\t\texpires = '; expires=' + date.toUTCString();\n\t\t} else {\n\t\t\texpires = '';\n\t\t}\n\t\tdocument.cookie = name + '=' + value + expires + '; path=/';\n\t\tthis.items$.next(this.toArray());\n\t}\n\n\tstatic isSupported(): boolean {\n\t\tconst isBrowser: boolean = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\t\treturn isBrowser;\n\t}\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport CookieStorageService from './cookie-storage.service';\nimport { IStorageItem } from './storage.service';\n\nexport default class CookieStorageComponent extends Component {\n\n\tactive: boolean = false;\n\titems: IStorageItem[] = [];\n\n\tonInit() {\n\t\tthis.items = CookieStorageService.toArray();\n\t\tCookieStorageService.items$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(items => {\n\t\t\tthis.items = items;\n\t\t\tthis.pushChanges();\n\t\t});\n\t}\n\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\n\tonClear() {\n\t\tCookieStorageService.clear();\n\t}\n\n\tonRemove(item: IStorageItem) {\n\t\tCookieStorageService.delete(item.name);\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'cookie-storage-component',\n\t\ttemplate: `\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ cookie</span>\n\t\t\t\t\t<span *if=\"active\">- cookie</span>\n\t\t\t\t\t<span [innerHTML]=\"' {' + items.length + ')'\"></span>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"rxc-head__remove\" (click)=\"onClear()\">x</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\" *for=\"let item of items\">\n\t\t\t\t\t<span class=\"rxc-list__name\" [innerHTML]=\"item.name\"></span>\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item.value | json\"></span>\n\t\t\t\t\t<span class=\"rxc-list__remove\" (click)=\"onRemove(item)\">x</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { ReplaySubject } from \"rxjs\";\nimport StorageService, { IStorageItem } from \"./storage.service\";\n\nexport default class LocalStorageService extends StorageService {\n\n\tstatic items$: ReplaySubject<IStorageItem[]> = new ReplaySubject(1);\n\n\tstatic clear(): void {\n\t\tif (this.isSupported()) {\n\t\t\tlocalStorage.clear();\n\t\t\tthis.items$.next(this.toArray());\n\t\t}\n\t}\n\n\tstatic delete(name: string): void {\n\t\tif (this.isSupported()) {\n\t\t\tlocalStorage.removeItem(name);\n\t\t\tthis.items$.next(this.toArray());\n\t\t}\n\t}\n\n\tstatic exist(name: string): boolean {\n\t\tif (this.isSupported()) {\n\t\t\treturn localStorage.getItem(name) !== undefined;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic get(name: string): any {\n\t\treturn this.decode(this.getRaw(name));\n\t}\n\n\tstatic set(name: string, value: any): void {\n\t\tthis.setRaw(name, this.encode(value));\n\t}\n\n\tstatic getRaw(name: string): string | null {\n\t\tlet value = null;\n\t\tif (this.isSupported()) {\n\t\t\tvalue = localStorage.getItem(name);\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic setRaw(name: string, value: string | null): void {\n\t\tif (value && this.isSupported()) {\n\t\t\tlocalStorage.setItem(name, value);\n\t\t\tthis.items$.next(this.toArray());\n\t\t}\n\t}\n\n\tstatic toArray(): IStorageItem[] {\n\t\treturn this.toRawArray().map(x => {\n\t\t\tx.value = this.decode(x.value);\n\t\t\treturn x;\n\t\t});\n\t}\n\n\tstatic toRawArray(): IStorageItem[] {\n\t\tif (this.isSupported()) {\n\t\t\treturn Object.keys(localStorage).map(key => {\n\t\t\t\treturn {\n\t\t\t\t\tname: key,\n\t\t\t\t\tvalue: this.getRaw(key),\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tstatic isSupported(): boolean {\n\t\tif (this.supported) {\n\t\t\treturn true;\n\t\t}\n\t\treturn StorageService.isSupported('localStorage');\n\t\t/*\n\t\tlet supported = false;\n\t\ttry {\n\t\t\tsupported = 'localStorage' in window && localStorage !== null;\n\t\t\tif (supported) {\n\t\t\t\tlocalStorage.setItem('test', '1');\n\t\t\t\tlocalStorage.removeItem('test');\n\t\t\t} else {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsupported = false;\n\t\t}\n\t\tthis.supported = supported;\n\t\treturn supported;\n\t\t*/\n\t}\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport LocalStorageService from './local-storage.service';\nimport { IStorageItem } from './storage.service';\n\nexport default class LocalStorageComponent extends Component {\n\n\tactive: boolean = false;\n\titems: IStorageItem[] = [];\n\n\tonInit() {\n\t\tthis.items = LocalStorageService.toArray();\n\t\tLocalStorageService.items$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(items => {\n\t\t\tthis.items = items;\n\t\t\tthis.pushChanges();\n\t\t});\n\t}\n\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tthis.pushChanges();\n\t}\n\n\tonClear() {\n\t\tLocalStorageService.clear();\n\t}\n\n\tonRemove(item: IStorageItem) {\n\t\tLocalStorageService.delete(item.name);\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'local-storage-component',\n\t\ttemplate: `\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ localStorage</span>\n\t\t\t\t\t<span *if=\"active\">- localStorage</span>\n\t\t\t\t\t<span [innerHTML]=\"' {' + items.length + ')'\"></span>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"rxc-head__remove\" (click)=\"onClear()\">x</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\" *for=\"let item of items\">\n\t\t\t\t\t<span class=\"rxc-list__name\" [innerHTML]=\"item.name\"></span>\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item.value | json\"></span>\n\t\t\t\t\t<span class=\"rxc-list__remove\" (click)=\"onRemove(item)\">x</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { ReplaySubject } from \"rxjs\";\nimport StorageService, { IStorageItem } from \"./storage.service\";\n\nexport default class SessionStorageService extends StorageService {\n\n\tstatic items$: ReplaySubject<IStorageItem[]> = new ReplaySubject(1);\n\n\tstatic clear(): void {\n\t\tif (this.isSupported()) {\n\t\t\tsessionStorage.clear();\n\t\t\tthis.items$.next(this.toArray());\n\t\t}\n\t}\n\n\tstatic delete(name: string): void {\n\t\tif (this.isSupported()) {\n\t\t\tsessionStorage.removeItem(name);\n\t\t\tthis.items$.next(this.toArray());\n\t\t}\n\t}\n\n\tstatic exist(name: string): boolean {\n\t\tif (this.isSupported()) {\n\t\t\treturn sessionStorage.getItem(name) !== undefined;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic get(name: string): any {\n\t\treturn this.decode(this.getRaw(name));\n\t}\n\n\tstatic set(name: string, value: any): void {\n\t\tthis.setRaw(name, this.encode(value));\n\t}\n\n\tstatic getRaw(name: string): string | null {\n\t\tlet value = null;\n\t\tif (this.isSupported()) {\n\t\t\tvalue = sessionStorage.getItem(name);\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic setRaw(name: string, value: string | null): void {\n\t\tif (value && this.isSupported()) {\n\t\t\tsessionStorage.setItem(name, value);\n\t\t\tthis.items$.next(this.toArray());\n\t\t}\n\t}\n\n\tstatic toArray(): IStorageItem[] {\n\t\treturn this.toRawArray().map(x => {\n\t\t\tx.value = this.decode(x.value);\n\t\t\treturn x;\n\t\t});\n\t}\n\n\tstatic toRawArray(): IStorageItem[] {\n\t\tif (this.isSupported()) {\n\t\t\treturn Object.keys(sessionStorage).map(key => {\n\t\t\t\treturn {\n\t\t\t\t\tname: key,\n\t\t\t\t\tvalue: this.getRaw(key),\n\t\t\t\t};\n\t\t\t});\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tstatic isSupported(): boolean {\n\t\tif (this.supported) {\n\t\t\treturn true;\n\t\t}\n\t\treturn StorageService.isSupported('sessionStorage');\n\t\t/*\n\t\tlet supported = false;\n\t\ttry {\n\t\t\tsupported = 'sessionStorage' in window && sessionStorage !== null;\n\t\t\tif (supported) {\n\t\t\t\tsessionStorage.setItem('test', '1');\n\t\t\t\tsessionStorage.removeItem('test');\n\t\t\t} else {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsupported = false;\n\t\t}\n\t\tthis.supported = supported;\n\t\treturn supported;\n\t\t*/\n\t}\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { takeUntil } from 'rxjs/operators';\nimport SessionStorageService from './session-storage.service';\nimport { IStorageItem } from './storage.service';\n\nexport default class SessionStorageComponent extends Component {\n\n\tactive: boolean = false;\n\titems: IStorageItem[] = [];\n\n\tonInit() {\n\t\tthis.items = SessionStorageService.toArray();\n\t\tSessionStorageService.items$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe(items => {\n\t\t\tthis.items = items;\n\t\t\tthis.pushChanges();\n\t\t});\n\t}\n\n\tonToggle() {\n\t\tthis.active = !this.active;\n\t\tconsole.log('SessionStorageComponent.onToggle', this.active);\n\t\tthis.pushChanges();\n\t}\n\n\tonClear() {\n\t\tSessionStorageService.clear();\n\t}\n\n\tonRemove(item: IStorageItem) {\n\t\tSessionStorageService.delete(item.name);\n\t}\n\n\tstatic meta: IFactoryMeta = {\n\t\tselector: 'session-storage-component',\n\t\ttemplate: `\n\t\t<div class=\"rxc-block\">\n\t\t\t<div class=\"rxc-head\">\n\t\t\t\t<span class=\"rxc-head__title\" (click)=\"onToggle()\">\n\t\t\t\t\t<span *if=\"!active\">+ sessionStorage</span>\n\t\t\t\t\t<span *if=\"active\">- sessionStorage</span>\n\t\t\t\t\t<span [innerHTML]=\"' {' + items.length + ')'\"></span>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"rxc-head__remove\" (click)=\"onClear()\">x</span>\n\t\t\t</div>\n\t\t\t<ul class=\"rxc-list\" *if=\"active\">\n\t\t\t\t<li class=\"rxc-list__item\" *for=\"let item of items\">\n\t\t\t\t\t<span class=\"rxc-list__name\" [innerHTML]=\"item.name\"></span>\n\t\t\t\t\t<span class=\"rxc-list__value\" [innerHTML]=\"item.value | json\"></span>\n\t\t\t\t\t<span class=\"rxc-list__remove\" (click)=\"onRemove(item)\">x</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>`,\n\t};\n}\n","import { Factory, IModuleMeta, Module, Pipe } from 'rxcomp';\nimport CookieStorageComponent from './storage/cookie-storage.component';\nimport LocalStorageComponent from './storage/local-storage.component';\nimport SessionStorageComponent from './storage/session-storage.component';\n\nconst factories: typeof Factory[] = [\n\tCookieStorageComponent,\n\tLocalStorageComponent,\n\tSessionStorageComponent,\n];\n\nconst pipes: typeof Pipe[] = [\n];\n\n/**\n * StoreModule Class.\n * @example\n * export default class AppModule extends Module {}\n *\n * AppModule.meta = {\n *  imports: [\n *   CoreModule,\n *   StoreModule\n *  ],\n *  declarations: [\n *   ErrorsComponent\n *  ],\n *  bootstrap: AppComponent,\n * };\n * @extends Module\n */\nexport default class StoreModule extends Module {\n\n\tstatic meta: IModuleMeta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\n}\n","import { produce } from 'immer';\nimport { BehaviorSubject, defer, Observable, of, Subject, throwError, timer } from 'rxjs';\nimport { catchError, delayWhen, distinctUntilChanged, filter, map, retryWhen, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport CookieStorageService from '../storage/cookie-storage.service';\nimport LocalStorageService from '../storage/local-storage.service';\nimport SessionStorageService from '../storage/session-storage.service';\n\nexport enum StoreType {\n\tMemory = 1,\n\tSession = 2,\n\tLocal = 3,\n\tCookie = 4,\n};\n\nexport interface IStore {\n\tbusy$: () => Observable<null>;\n\treducer: <T, R>(reducer: (data: T, draft: any) => R) => (source: Observable<T>) => Observable<any>;\n\tnext: (callback: (draft: any) => any) => any;\n\tnextError: (error: any) => Observable<any>;\n\tselect: (callback: (draft: any) => any) => any;\n\tselect$: (callback: (draft: any) => any) => any;\n\tcached$: (callback: (draft: any) => any) => any;\n\tcatchState: (error?: any) => any;\n\tretryState: (times?: number, delay?: number) => (source: Observable<any>) => Observable<any>;\n\tcancel: () => void;\n\tstate$: Observable<any>;\n}\n\nexport class Store {\n\n\ttype: StoreType;\n\tkey: string;\n\tstate$: Observable<any>;\n\tcancel$: Subject<void> = new Subject;\n\n\tget state() {\n\t\treturn this.select((draft: any) => draft);\n\t}\n\n\tset state(callback: (draft: any) => any) {\n\t\tthis.next(callback);\n\t}\n\n\tconstructor(state: any = {}, type = StoreType.Memory, key: string = 'store') {\n\t\tthis.type = type;\n\t\tthis.key = `rxcomp_${key}`;\n\t\tstate.busy = false;\n\t\tstate.error = null;\n\t\tconst state_ = new BehaviorSubject(state);\n\t\tthis.next = makeNext(state_);\n\t\tthis.nextError = makeNextError(state_);\n\t\tthis.select = makeSelect(state_);\n\t\tthis.state$ = state_.asObservable();\n\t}\n\n\tbusy$(): Observable<null> {\n\t\treturn of(null).pipe(\n\t\t\tfilter(() => {\n\t\t\t\tlet busy = this.select(state => state.busy);\n\t\t\t\tif (!busy) {\n\t\t\t\t\tthis.state = (draft: any) => {\n\t\t\t\t\t\tdraft.busy = true;\n\t\t\t\t\t\tdraft.error = null;\n\t\t\t\t\t\tdraft.retry = null;\n\t\t\t\t\t};\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttakeUntil(this.cancel$),\n\t\t);\n\t}\n\n\tcached$(callback: (value: any) => any): Observable<any> {\n\t\treturn of(null).pipe(\n\t\t\tmap(() => {\n\t\t\t\tlet value = null;\n\t\t\t\tif (this.type === StoreType.Local) {\n\t\t\t\t\tvalue = LocalStorageService.get(this.key);\n\t\t\t\t} else if (this.type === StoreType.Session) {\n\t\t\t\t\tvalue = SessionStorageService.get(this.key);\n\t\t\t\t} else if (this.type === StoreType.Cookie) {\n\t\t\t\t\tvalue = CookieStorageService.get(this.key);\n\t\t\t\t}\n\t\t\t\tif (value && typeof callback === 'function') {\n\t\t\t\t\tvalue = callback(value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}),\n\t\t\tfilter((x) => {\n\t\t\t\t// console.log('value', x);\n\t\t\t\treturn x != null;\n\t\t\t})\n\t\t);\n\t}\n\n\tselect$(callback: (draft: any) => any): Observable<any> {\n\t\treturn this.state$.pipe(\n\t\t\tmap(callback),\n\t\t\tdistinctUntilChanged()\n\t\t);\n\t}\n\n\tselect(callback: (draft: any) => any): any { }\n\n\tnext(callback: (draft: any) => any): void { }\n\n\tnextError(error: any): Observable<any> {\n\t\treturn of();\n\t}\n\n\treducer<T, R>(reducer: (data: T, draft: any) => R) {\n\t\treturn (source: Observable<T>) => defer(() => {\n\t\t\t// initialize global values\n\t\t\treturn source.pipe(\n\t\t\t\tmap((data: T) => {\n\t\t\t\t\tif (typeof reducer === 'function') {\n\t\t\t\t\t\tthis.state = (draft: any) => {\n\t\t\t\t\t\t\tdraft.error = null;\n\t\t\t\t\t\t\tdraft.retry = null;\n\t\t\t\t\t\t\treducer(data, draft);\n\t\t\t\t\t\t\tdraft.busy = false;\n\t\t\t\t\t\t\tif (this.type === StoreType.Local) {\n\t\t\t\t\t\t\t\tLocalStorageService.set(this.key, draft);\n\t\t\t\t\t\t\t\t// console.log('reducer.LocalStorageService.set', this.key, draft);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.type === StoreType.Session) {\n\t\t\t\t\t\t\t\tSessionStorageService.set(this.key, draft);\n\t\t\t\t\t\t\t\t// console.log('reducer.SessionStorageService.set', this.key, draft);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.type === StoreType.Cookie) {\n\t\t\t\t\t\t\t\tCookieStorageService.set(this.key, draft, 365);\n\t\t\t\t\t\t\t\t// console.log('reducer.CookieStorageService.set', this.key, draft);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t};\n\n\tretryState(times: number = 3, delay: number = 1000): (source: Observable<any>) => Observable<unknown> {\n\t\treturn (source: Observable<any>) => defer(() => {\n\t\t\t// initialize global values\n\t\t\tlet i = 0;\n\t\t\treturn source.pipe(\n\t\t\t\tretryWhen((errors) => errors.pipe(\n\t\t\t\t\tdelayWhen(() => timer(delay)),\n\t\t\t\t\tswitchMap((error) => {\n\t\t\t\t\t\t// next((draft: any) => draft.busy = false);\n\t\t\t\t\t\tif (i < times) {\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tthis.state = (draft: any) => {\n\t\t\t\t\t\t\t\tdraft.retry = i;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn of(i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn throwError(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)),\n\t\t\t);\n\t\t});\n\t};\n\n\tcatchState(errorReducer?: (error: any) => any): (source: Observable<any>) => Observable<any> {\n\t\treturn (source: Observable<any>) =>\n\t\t\tdefer(() => {\n\t\t\t\t// initialize global values\n\t\t\t\treturn source.pipe(\n\t\t\t\t\ttakeUntil(this.cancel$.pipe(\n\t\t\t\t\t\ttap(() => {\n\t\t\t\t\t\t\tthis.state = (draft: any) => {\n\t\t\t\t\t\t\t\tdraft.busy = false;\n\t\t\t\t\t\t\t\tdraft.retry = null;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t)),\n\t\t\t\t\tcatchError(error => {\n\t\t\t\t\t\tthis.state = (draft: any) => {\n\t\t\t\t\t\t\tdraft.error = error;\n\t\t\t\t\t\t\tdraft.busy = false;\n\t\t\t\t\t\t\tdraft.retry = null;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (typeof errorReducer === 'function') {\n\t\t\t\t\t\t\terror = errorReducer(error);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terror = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (error ? of(error) : of());\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t});\n\t};\n\n\tcancel(): void {\n\t\tthis.cancel$.next();\n\t}\n}\n\nexport function useStore(state: any, type?: StoreType, key?: string): IStore {\n\tconst store = new Store(state, type, key);\n\treturn {\n\t\tstate$: store.state$,\n\t\tbusy$: store.busy$.bind(store),\n\t\tcached$: store.cached$.bind(store),\n\t\tselect$: store.select$.bind(store),\n\t\tselect: store.select.bind(store),\n\t\tnext: store.next.bind(store),\n\t\tnextError: store.nextError.bind(store),\n\t\treducer: store.reducer.bind(store),\n\t\tcatchState: store.catchState.bind(store),\n\t\tretryState: store.retryState.bind(store),\n\t\tcancel: store.cancel.bind(store),\n\t};\n}\n\n/*\nexport function makeNext<T, R>(callback: (data: T) => R) : OperatorFunction<T, R>\nexport function makeNext<T extends { data: any }>() : OperatorFunction<T, T['data']>\nexport function makeNext<T>() : OperatorFunction<T, T>\nexport function makeNext<T extends { data? : undefined } | { data: R }, R>(callback?: (data: T) => R) {\n  return (source: Observable<T>) => source.pipe(\n    map(value => typeof callback === 'function' ? callback(value) : (value.data ? value.data : value)),\n  );\n}\n*/\n\nfunction makeNext(state: BehaviorSubject<any>): (callback: (draft: any) => any) => void {\n\treturn (callback: (draft: any) => any) => {\n\t\tstate.next(produce(state.getValue(), (draft: any) => {\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback(draft);\n\t\t\t}\n\t\t\treturn draft;\n\t\t}));\n\t};\n}\n\nfunction makeNextError(state: BehaviorSubject<any>): (error: any) => Observable<any> {\n\treturn (error?: any) => {\n\t\tstate.next(produce(state.getValue(), (draft: any) => {\n\t\t\tdraft.error = error;\n\t\t\tdraft.busy = false;\n\t\t\tdraft.retry = null;\n\t\t\treturn draft;\n\t\t}));\n\t\treturn of(error);\n\t};\n}\n\nfunction makeSelect(state: BehaviorSubject<any>): (callback: (draft: any) => any) => any {\n\treturn (callback: (draft: any) => any) => {\n\t\treturn callback(state.getValue());\n\t};\n}\n"]}