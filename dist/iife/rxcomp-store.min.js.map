{"version":3,"sources":["src/rxcomp-store.ts","../../src/storage/local-storage.service.ts","../../src/storage/session-storage.service.ts","../../src/store.module.ts","../../src/store/store.ts"],"names":["this","rxcomp","form","exports","immer","rxjs","operators","LocalStorageService","clear","isLocalStorageSupported","localStorage","delete","name","removeItem","exist","undefined","getItem","get","value","item","JSON","parse","error","console","log","set","cache","Map","json","stringify","key","has","setItem","supported","window","SessionStorageService","isSessionStorageSupported","sessionStorage","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","StoreType","factories","pipes","StoreModule","subClass","superClass","_Module","apply","arguments","prototype","create","constructor","__proto__","Module","setState","store","callback","output","state","draft","busy","type","Local","Session","setError","of","declarations","concat","Store","Memory","state_","BehaviorSubject","next","produce","getValue","makeSetState","state$","asObservable","Constructor","protoProps","staticProps","useStore","pipe","filter","getState","map","x"],"mappings":"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","file":"dist\\iife\\rxcomp-store.min.js","sourcesContent":[null,"export default class LocalStorageService {\n\n\tstatic supported: boolean = false;\n\n\tstatic clear() {\n\t\tif (this.isLocalStorageSupported()) {\n\t\t\tlocalStorage.clear();\n\t\t}\n\t}\n\n\tstatic delete(name: string) {\n\t\tif (this.isLocalStorageSupported()) {\n\t\t\tlocalStorage.removeItem(name);\n\t\t}\n\t}\n\n\tstatic exist(name: string): boolean {\n\t\tif (this.isLocalStorageSupported()) {\n\t\t\treturn localStorage.getItem(name) !== undefined;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic get(name: string): any {\n\t\tlet value = null;\n\t\tif (this.isLocalStorageSupported()) {\n\t\t\ttry {\n\t\t\t\tconst item = localStorage.getItem(name);\n\t\t\t\tif (item != null) {\n\t\t\t\t\tvalue = JSON.parse(item);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('LocalStorageService.get.error parsing', name, error);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic set(name: string, value: any) {\n\t\tif (this.isLocalStorageSupported()) {\n\t\t\ttry {\n\t\t\t\tconst cache = new Map();\n\t\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\t\tif (cache.has(value)) {\n\t\t\t\t\t\t\t// Circular reference found, discard key\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcache.set(value, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(name, json);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('LocalStorageService.set.error serializing', name, value, error);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic isLocalStorageSupported(): boolean {\n\t\tif (this.supported) {\n\t\t\treturn true;\n\t\t}\n\t\tlet supported = false;\n\t\ttry {\n\t\t\tsupported = 'localStorage' in window && localStorage !== null;\n\t\t\tif (supported) {\n\t\t\t\tlocalStorage.setItem('test', '1');\n\t\t\t\tlocalStorage.removeItem('test');\n\t\t\t} else {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsupported = false;\n\t\t}\n\t\tthis.supported = supported;\n\t\treturn supported;\n\t}\n}\n","export default class SessionStorageService {\n\n\tstatic supported: boolean = false;\n\n\tstatic clear() {\n\t\tif (this.isSessionStorageSupported()) {\n\t\t\tsessionStorage.clear();\n\t\t}\n\t}\n\n\tstatic delete(name: string) {\n\t\tif (this.isSessionStorageSupported()) {\n\t\t\tsessionStorage.removeItem(name);\n\t\t}\n\t}\n\n\tstatic exist(name: string): boolean {\n\t\tif (this.isSessionStorageSupported()) {\n\t\t\treturn sessionStorage.getItem(name) !== undefined;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstatic get(name: string): any {\n\t\tlet value = null;\n\t\tif (this.isSessionStorageSupported()) {\n\t\t\ttry {\n\t\t\t\tconst item = sessionStorage.getItem(name);\n\t\t\t\tif (item != null) {\n\t\t\t\t\tvalue = JSON.parse(item);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('SessionStorageService.get.error parsing', name, error);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic set(name: string, value: any) {\n\t\tif (this.isSessionStorageSupported()) {\n\t\t\ttry {\n\t\t\t\tconst cache = new Map();\n\t\t\t\tconst json = JSON.stringify(value, function (key, value) {\n\t\t\t\t\tif (typeof value === 'object' && value !== null) {\n\t\t\t\t\t\tif (cache.has(value)) {\n\t\t\t\t\t\t\t// Circular reference found, discard key\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcache.set(value, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t\tsessionStorage.setItem(name, json);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('SessionStorageService.set.error serializing', name, value, error);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic isSessionStorageSupported(): boolean {\n\t\tif (this.supported) {\n\t\t\treturn true;\n\t\t}\n\t\tlet supported = false;\n\t\ttry {\n\t\t\tsupported = 'sessionStorage' in window && sessionStorage !== null;\n\t\t\tif (supported) {\n\t\t\t\tsessionStorage.setItem('test', '1');\n\t\t\t\tsessionStorage.removeItem('test');\n\t\t\t} else {\n\t\t\t\tsupported = false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsupported = false;\n\t\t}\n\t\tthis.supported = supported;\n\t\treturn supported;\n\t}\n}\n","import { Factory, IModuleMeta, Module, Pipe } from 'rxcomp';\n\nconst factories: typeof Factory[] = [\n];\n\nconst pipes: typeof Pipe[] = [];\n\n/**\n * StoreModule Class.\n * @example\n * export default class AppModule extends Module {}\n *\n * AppModule.meta = {\n *  imports: [\n *   CoreModule,\n *   StoreModule\n *  ],\n *  declarations: [\n *   ErrorsComponent\n *  ],\n *  bootstrap: AppComponent,\n * };\n * @extends Module\n */\nexport default class StoreModule extends Module {\n\n\tstatic meta: IModuleMeta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\n}\n","import { produce } from 'immer';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport LocalStorageService from '../storage/local-storage.service';\nimport SessionStorageService from '../storage/session-storage.service';\n\nfunction busy(store: Store): Observable<any> {\n\treturn of(null).pipe(\n\t\tfilter(() => {\n\t\t\tlet busy;\n\t\t\tstore.state = (draft: any) => {\n\t\t\t\tbusy = draft.busy;\n\t\t\t\tif (!busy) {\n\t\t\t\t\tdraft.busy = true;\n\t\t\t\t\tdraft.error = null;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn !busy;\n\t\t})\n\t);\n}\n\nfunction setState(store: Store): (callback: (draft: any) => any) => any {\n\treturn (callback: (draft: any) => any) => {\n\t\tlet output;\n\t\tstore.state = (draft: any) => {\n\t\t\tdraft.error = null;\n\t\t\toutput = callback(draft);\n\t\t\tdraft.busy = false;\n\t\t\tif (store.type === StoreType.Local) {\n\t\t\t\tLocalStorageService.set(store.key, draft);\n\t\t\t\t// console.log('setState.LocalStorageService.set', store.key, draft);\n\t\t\t}\n\t\t\tif (store.type === StoreType.Session) {\n\t\t\t\tSessionStorageService.set(store.key, draft);\n\t\t\t\t// console.log('setState.SessionStorageService.set', store.key, draft);\n\t\t\t}\n\t\t};\n\t\treturn output;\n\t};\n}\n\nfunction setError(store: Store): (error: any) => Observable<void> {\n\treturn (error: any) => {\n\t\tstore.state = (draft: any) => {\n\t\t\tdraft.error = error;\n\t\t\tdraft.busy = false;\n\t\t};\n\t\treturn of();\n\t};\n}\n\nfunction getState(store: Store, callback: (value: any) => any): Observable<any> {\n\treturn of(null).pipe(\n\t\tmap(() => {\n\t\t\tlet value = null;\n\t\t\tif (store.type === StoreType.Local) {\n\t\t\t\tvalue = LocalStorageService.get(store.key);\n\t\t\t\tif (value && typeof callback === 'function') {\n\t\t\t\t\tvalue = callback(value);\n\t\t\t\t}\n\t\t\t\t// console.log('getLocal.LocalStorageService.get', store.key, value);\n\t\t\t} else if (store.type === StoreType.Session) {\n\t\t\t\tvalue = SessionStorageService.get(store.key);\n\t\t\t\tif (value && typeof callback === 'function') {\n\t\t\t\t\tvalue = callback(value);\n\t\t\t\t}\n\t\t\t\t// console.log('getLocal.SessionStorageService.get', store.key, value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}),\n\t\tfilter((x) => {\n\t\t\t// console.log('value', x);\n\t\t\treturn x !== null;\n\t\t})\n\t);\n}\n\nfunction makeSetState(state: BehaviorSubject<any>): (callback: (draft: any) => any) => void {\n\treturn (callback: (draft: any) => any) => {\n\t\tstate.next(produce(state.getValue(), (draft: any) => {\n\t\t\tif (typeof callback === 'function') {\n\t\t\t\tcallback(draft);\n\t\t\t}\n\t\t\treturn draft;\n\t\t}));\n\t};\n}\n\nexport enum StoreType {\n\tMemory = 1,\n\tSession = 2,\n\tLocal = 3,\n};\n\nexport class Store {\n\n\ttype: StoreType;\n\tkey: string;\n\tstate$: Observable<any>;\n\n\tset state(callback: (draft: any) => any) {\n\t\tthis.setState(callback);\n\t}\n\n\tconstructor(state: any = {}, type = StoreType.Memory, key: string = 'store') {\n\t\tthis.type = type;\n\t\tthis.key = `rxcomp_${key}`;\n\t\tstate.busy = false;\n\t\tstate.error = null;\n\t\tconst state_ = new BehaviorSubject(state);\n\t\tthis.setState = makeSetState(state_);\n\t\tthis.state$ = state_.asObservable();\n\t}\n\n\tsetState(callback: (draft: any) => any): void { }\n}\n\nexport interface IStore {\n\tbusy: () => Observable<any>,\n\tgetState: (callback: (draft: any) => any) => any,\n\tsetState: (callback: (draft: any) => any) => any,\n\tsetError: (error: any) => Observable<void>,\n\tstate$: Observable<any>,\n}\n\nexport function useStore(state: any, type?: StoreType, key?: string): IStore {\n\tconst store = new Store(state, type, key);\n\treturn {\n\t\tbusy: () => busy(store),\n\t\tgetState: (callback: (draft: any) => any) => getState(store, callback),\n\t\tsetState: setState(store),\n\t\tsetError: setError(store),\n\t\tstate$: store.state$,\n\t};\n}\n\n"]}